{"ast":null,"code":"import _classCallCheck from \"F:/web/biblioteca/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"F:/web/biblioteca/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"F:/web/biblioteca/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _inherits from \"F:/web/biblioteca/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var AnimationFrameScheduler = /*#__PURE__*/function (_AsyncScheduler) {\n  function AnimationFrameScheduler() {\n    _classCallCheck(this, AnimationFrameScheduler);\n    return _callSuper(this, AnimationFrameScheduler, arguments);\n  }\n  _inherits(AnimationFrameScheduler, _AsyncScheduler);\n  return _createClass(AnimationFrameScheduler, [{\n    key: \"flush\",\n    value: function flush(action) {\n      this._active = true;\n      var flushId;\n      if (action) {\n        flushId = action.id;\n      } else {\n        flushId = this._scheduled;\n        this._scheduled = undefined;\n      }\n      var actions = this.actions;\n      var error;\n      action = action || actions.shift();\n      do {\n        if (error = action.execute(action.state, action.delay)) {\n          break;\n        }\n      } while ((action = actions[0]) && action.id === flushId && actions.shift());\n      this._active = false;\n      if (error) {\n        while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n          action.unsubscribe();\n        }\n        throw error;\n      }\n    }\n  }]);\n}(AsyncScheduler);\n//# sourceMappingURL=AnimationFrameScheduler.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}