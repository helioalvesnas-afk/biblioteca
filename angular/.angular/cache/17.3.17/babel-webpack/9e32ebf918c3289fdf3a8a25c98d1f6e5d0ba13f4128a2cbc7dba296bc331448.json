{"ast":null,"code":"import _classCallCheck from \"F:/biblioteca/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"F:/biblioteca/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _callSuper from \"F:/biblioteca/angular/node_modules/@babel/runtime/helpers/esm/callSuper.js\";\nimport _superPropGet from \"F:/biblioteca/angular/node_modules/@babel/runtime/helpers/esm/superPropGet.js\";\nimport _inherits from \"F:/biblioteca/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport var AnimationFrameAction = /*#__PURE__*/function (_AsyncAction) {\n  function AnimationFrameAction(scheduler, work) {\n    var _this;\n    _classCallCheck(this, AnimationFrameAction);\n    _this = _callSuper(this, AnimationFrameAction, [scheduler, work]);\n    _this.scheduler = scheduler;\n    _this.work = work;\n    return _this;\n  }\n  _inherits(AnimationFrameAction, _AsyncAction);\n  return _createClass(AnimationFrameAction, [{\n    key: \"requestAsyncId\",\n    value: function requestAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if (delay !== null && delay > 0) {\n        return _superPropGet(AnimationFrameAction, \"requestAsyncId\", this, 3)([scheduler, id, delay]);\n      }\n      scheduler.actions.push(this);\n      return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(function () {\n        return scheduler.flush(undefined);\n      }));\n    }\n  }, {\n    key: \"recycleAsyncId\",\n    value: function recycleAsyncId(scheduler, id) {\n      var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var _a;\n      if (delay != null ? delay > 0 : this.delay > 0) {\n        return _superPropGet(AnimationFrameAction, \"recycleAsyncId\", this, 3)([scheduler, id, delay]);\n      }\n      var actions = scheduler.actions;\n      if (id != null && id === scheduler._scheduled && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n        scheduler._scheduled = undefined;\n      }\n      return undefined;\n    }\n  }]);\n}(AsyncAction);\n//# sourceMappingURL=AnimationFrameAction.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}